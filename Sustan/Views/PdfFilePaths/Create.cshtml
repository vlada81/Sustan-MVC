@model Sustan.Models.PdfFilePath

@{
    ViewBag.Title = "Dodaj dokumentaciju";
}

@Html.Partial("_PageTitle")

<section>
    <div class="container">
        <div class="row">
            <div class="col-sm-12">
                @using (Html.BeginForm("Create", "PdfFilePaths", FormMethod.Post, new { @id = "createForm", enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <h4 class="form-error-text">@ViewBag.Error</h4>
                    <div class="form-horizontal">
                        <br />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.BuildingId, "JIBZ", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("BuildingId", null, "- Izaberite zgradu -", htmlAttributes: new { @class = "form-control", autocomplete = "BuildingId" })
                                @Html.ValidationMessageFor(model => model.BuildingId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">Dokumenti zgrade</label>
                            <div class="col-md-10">
                                <input class="control-label" type="file" multiple id="uploadPdfs" name="uploadPdfs" />
                            </div>
                        </div>

                        <br />
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Dodaj" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Nazad", "Index", null, new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/Scripts/jqueryval")
    <script>
        $(document).ready(function () {

            $.validator.addMethod('filesize', function (value, element, param) {
                return this.optional(element) || (element.files[0].size <= param);
            }, 'File size must be less than {0}');


            $("#createForm").validate({
                errorClass: 'text-danger animation-slideDown',

                rules: {
                    'BuildingId': {
                        required: true
                    },
                    'uploadPdfs': {
                        required: true,
                        accept: "application/pdf"
                    }
                },
                messages: {
                    'BuildingId': {
                        required: "Molim Vas izberite zgradu!"
                    },
                    'uploadPdfs': {
                        required: "Molim Vas izberite barem jednu datoteku!",
                        accept: "Podržani format datoteke je .pdf"
                    }
                }
            });
        });

    </script>
}
