@model Sustan.ViewModels.UserViewModel

@{
    ViewBag.Title = "Edit";
}

@Html.Partial("_AdminPageTitle")

<section>
    <div class="container">
        <div class="row">
            <div class="col-sm-12">
                @using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { @id = "editForm" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Korisnik: @Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.LastName) </h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Sačuvaj" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Nazad", "Index", null, new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/Scripts/jqueryval")
    <script>
        $(document).ready(function () {

            jQuery.validator.addMethod(
                "regex",
                function (value, element, regexp) {
                    if (regexp.constructor != RegExp)
                        regexp = new RegExp(regexp);
                    else if (regexp.global)
                        regexp.lastIndex = 0;
                    return this.optional(element) || regexp.test(value);
                }, "Pogrešan format zapisa!"
            );

            $("#editForm").validate({
                errorClass: 'text-danger animation-slideDown',

                rules: {
                    'FirstName': {
                        required: true,
                        regex: /[A-Za-z\s\u0100-\u017F]+$/
                    },
                    'LastName': {
                        required: true,
                        regex: /[A-Za-z\s\u0100-\u017F]+$/
                    },
                    'Email': {
                        required: true,
                        email: true
                    },
                    'Password': {
                        required: true,
                        minlength: 6,

                    }

                },
                messages: {
                    'FirstName': {
                        required: "Molim Vas unesite ime korisnika!",
                        regex: "Ime korisnika može sadržati samo slova"
                    },
                    'LastName': {
                        required: "Molim Vas unesite prezime korisnika!",
                        regex: "Prezime korisnika može sadržati samo slova"
                    },
                    'Email': {
                        required: "Molim Vas unesite email adresu korisnika.",
                        email: "Format email adrese nije ispravan, molim Vas pokušajte ponovo."
                    },
                    'Password': {
                        required: "Molim Vas unesite lozinku!",
                        minlength: "Lozinka mora sadržati najmanje 6 karaktera.",

                    }
                }

            });


        });

    </script>
}
